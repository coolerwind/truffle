{"ast":null,"code":"var _jsxFileName = \"/home/devopsthinh/Desktop/blockchain/truffle/src/App.js\";\n\n/**\n * App.js have these fuctions:\n *\n * Use the injected web3 objected to connect to the Ganache blockchain and set the network in the navigation bar.\n * Asynchronously access MetaMask for account authorization.\n * Define the Transfer, Approve, and Mint methods for interacting with the token contracts.\n * Set the state and pass the relevant props to the container component before each operation (Approve, Mint, and Transfer) is carried out.\n *\n * Author: Truong Thinh\n * Create At: 7/ 8/ 2021\n */\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Tokens20 from \"./Tokens/all20\";\nimport Tokens721 from \"./Tokens/all721\";\nimport Nav from \"./Components/Nav\";\nimport Description from \"./Components/Description\";\nimport Container from \"./Components/Container\";\nimport InstallMetamask from \"./Components/InstallMetamask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.setNetwork = () => {\n      let networkName,\n          that = this;\n      this.web3.eth.net.getId(function (err, networkId) {\n        switch (networkId) {\n          case \"1\":\n            networkName = \"Main\";\n            break;\n\n          case \"2\":\n            networkName = \"Morden\";\n            break;\n\n          case \"3\":\n            networkName = \"Ropsten\";\n            break;\n\n          case \"4\":\n            networkName = \"Rinkeby\";\n            break;\n\n          case \"42\":\n            networkName = \"Kovan\";\n            break;\n\n          default:\n            networkName = networkId;\n        }\n\n        that.setState({\n          network: networkName\n        });\n      });\n    };\n\n    this.newTransfer20 = index => {\n      this.setState({\n        transferDetail20: this.state.tokens20[index]\n      });\n    };\n\n    this.newTransfer721 = index => {\n      this.setState({\n        transferDetail721: this.state.tokens721[index]\n      });\n    };\n\n    this.newMint20 = index => {\n      this.setState({\n        mintDetail20: this.state.tokens20[index]\n      });\n    };\n\n    this.newMint721 = index => {\n      this.setState({\n        mintDetail721: this.state.tokens721[index]\n      });\n    };\n\n    this.newApprove20 = index => {\n      this.setState({\n        approveDetail20: this.state.tokens20[index]\n      });\n    };\n\n    this.newApprove721 = index => {\n      this.setState({\n        approveDetail721: this.state.tokens721[index]\n      });\n    };\n\n    this.closeTransfer = () => {\n      this.setState({\n        transferDetail20: {},\n        transferDetail721: {},\n        mintDetail20: {},\n        mintDetail721: {},\n        approveDetail20: {},\n        approveDetail721: {},\n        fields: {}\n      });\n    };\n\n    this.setGasPrice = () => {\n      this.web3.eth.getGasPrice((err, price) => {\n        var Gasprice = this.web3.utils.fromWei(price, \"gwei\");\n        if (!err) this.setState({\n          defaultGasPrice: Gasprice\n        });\n      });\n    };\n\n    this.resetApp = () => {\n      this.setState({\n        transferDetail20: {},\n        transferDetail721: {},\n        fields: {\n          receiver: null,\n          amount: null,\n          gasPrice: null,\n          gasLimit: null,\n          metadata: null,\n          tokenId: null\n        },\n        defaultGasPrice: null\n      });\n      window.location.reload();\n    };\n\n    this.Transfer = () => {\n      this.setState({\n        inProgress: true\n      }); //this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\n      var contract;\n\n      if (this.state.fields.metadata) {\n        contract = new this.web3.eth.Contract(this.state.transferDetail721.abi, this.state.transferDetail721.address);\n      } else {\n        contract = new this.web3.eth.Contract(this.state.transferDetail20.abi, this.state.transferDetail20.address);\n      }\n\n      let app = this;\n      var metadata;\n      var tokenId;\n      var amount;\n\n      if (this.state.fields.metadata) {\n        metadata = this.state.fields.metadata;\n        tokenId = this.state.fields.tokenid;\n      } else {\n        amount = this.state.fields.amount * Math.pow(10, this.state.transferDetail20.decimal);\n      }\n\n      let receiver = this.state.fields.receiver.toString();\n      let account = this.state.account;\n\n      if (metadata) {\n        contract.methods.transferNFT(account, receiver, tokenId, metadata).send({\n          from: this.web3.eth.defaultAccount\n        }).then(function (response, err) {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      } else {\n        contract.methods.transfer(receiver, amount).send({\n          from: this.web3.eth.defaultAccount\n        }).then(function (response, err) {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      }\n    };\n\n    this.Mint = () => {\n      this.setState({\n        inProgress: true\n      }); //this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\n      var contract;\n\n      if (this.state.fields.metadata) {\n        contract = new this.web3.eth.Contract(this.state.mintDetail721.abi, this.state.mintDetail721.address);\n      } else {\n        contract = new this.web3.eth.Contract(this.state.mintDetail20.abi, this.state.mintDetail20.address);\n      }\n\n      let app = this;\n      var metadata;\n      var amount;\n\n      if (this.state.fields.metadata) {\n        metadata = this.state.fields.metadata;\n      } else {\n        amount = this.state.fields.amount * Math.pow(10, this.state.mintDetail20.decimal);\n      }\n\n      let receiver = this.state.fields.receiver.toString();\n\n      if (metadata) {\n        contract.methods.createNFT(receiver, metadata).send({\n          from: this.web3.eth.defaultAccount\n        }).then(function (response) {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          }\n        });\n      } else {\n        contract.methods.mint(receiver, amount).send({\n          from: this.web3.eth.defaultAccount\n        }).then(function (response) {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          }\n        });\n      }\n    };\n\n    this.Approve = () => {\n      this.setState({\n        inProgress: true\n      });\n      var contract;\n\n      if (this.state.approveDetail721.abi) {\n        contract = new this.web3.eth.Contract(this.state.approveDetail721.abi, this.state.approveDetail721.address);\n      } else {\n        contract = new this.web3.eth.Contract(this.state.approveDetail20.abi, this.state.approveDetail20.address);\n      }\n\n      let app = this;\n      let receiver = this.state.fields.receiver.toString();\n\n      if (this.state.approveDetail20.abi) {\n        let amount = this.state.fields.amount * Math.pow(10, this.state.approveDetail20.decimal);\n        contract.methods.approve(receiver, amount).send({\n          from: this.web3.eth.defaultAccount\n        }).then(function (response) {\n          if (response) {\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          }\n        });\n      } else {\n        let tokenid = this.state.fields.tokenid;\n        contract.methods.approve(receiver, tokenid).send({\n          from: this.web3.eth.defaultAccount\n        }).then(function (response) {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false\n            });\n          }\n        });\n      }\n    };\n\n    this.onInputChangeUpdateField = (name, value) => {\n      let fields = this.state.fields;\n      fields[name] = value;\n      this.setState({\n        fields\n      });\n    };\n\n    this.tokens20 = Tokens20;\n    this.tokens721 = Tokens721;\n    this.appName = \"OniCoinWallet\";\n    this.isWeb3 = true;\n    this.newTransfer20 = this.newTransfer20.bind(this);\n    this.newTransfer721 = this.newTransfer721.bind(this);\n    this.newMint20 = this.newMint20.bind(this);\n    this.newMint721 = this.newMint721.bind(this);\n    this.newApprove20 = this.newApprove20.bind(this);\n    this.newApprove721 = this.newApprove721.bind(this);\n    this.closeTransfer = this.closeTransfer.bind(this);\n    this.onInputChangeUpdateField = this.onInputChangeUpdateField.bind(this);\n    this.state = {\n      inProgress: false,\n      tx20: null,\n      tx721: null,\n      network: \"Checking...\",\n      account: null,\n      tokens20: [],\n      tokens721: [],\n      transferDetail20: {},\n      transferDetail721: {},\n      mintDetail20: {},\n      mintDetail721: {},\n      approveDetail20: {},\n      approveDetail721: {},\n      fields: {\n        receiver: null,\n        amount: null,\n        metadata: null,\n        tokenId: null,\n        gasPrice: null,\n        gasLimit: null\n      },\n      defaultGasPrice: null,\n      defaultGasLimit: 200000\n    };\n  }\n\n  // To indicate the tasks to carry out after App is rendered\n  componentDidMount() {\n    var account;\n\n    if (window.ethereum) {\n      const ethereum = window.ethereum;\n      window.web3 = new Web3(ethereum);\n      this.web3 = new Web3(ethereum); // Set the local account parameter to the first account in the array of accounts returned.\n\n      ethereum.enable().then(accounts => {\n        account = accounts[0]; // Set the default account for window.web3\n\n        this.web3.eth.defaultAccount = account; // Init the this object for our app\n\n        let app = this; // Set the account state variable to the default account.\n\n        this.setState({\n          account\n        });\n        /**\n         * Called the setNetwork (to set the Navbar to our local Ganache blockchain) and\n         * setGasPrice methods (to get the default gas price from the network) once we have access to the injected web3.\n        */\n\n        this.setNetwork();\n        this.setGasPrice();\n        Tokens20.forEach(token => {\n          let erc20Token = new this.web3.eth.Contract(token.abi, token.address);\n          erc20Token.methods.balanceOf(account).call().then(function (response) {\n            if (response) {\n              let decimal = token.decimal;\n              let precision = \"1e\" + decimal;\n              let balance = response / precision;\n              let name = token.name;\n              let symbol = token.symbol;\n              let icon = token.icon;\n              let abi = token.abi;\n              let address = token.address;\n              balance = balance >= 0 ? balance : 0;\n              let tokens20 = app.state.tokens20;\n              if (balance > 0) tokens20.push({\n                decimal,\n                balance,\n                name,\n                symbol,\n                icon,\n                abi,\n                address\n              });\n              app.setState({\n                tokens20\n              });\n            }\n          });\n        });\n        Tokens721.forEach(token721 => {\n          let erc721Token = new this.web3.eth.Contract(token721.abi, token721.address);\n          erc721Token.methods.MDTrack(account).call().then(function (response) {\n            if (response) {\n              let name = token721.name;\n              let symbol = token721.symbol;\n              let icon = token721.icon;\n              let abi = token721.abi;\n              let address = token721.address;\n              let tokenid = response;\n              tokenid = tokenid >= 0 ? tokenid : 0;\n\n              if (tokenid !== 0) {\n                erc721Token.methods.tokenURI(tokenid).call().then(function (response) {\n                  if (response) {\n                    let metadata = response;\n                    let tokens721 = app.state.tokens721;\n                    tokens721.push({\n                      name,\n                      symbol,\n                      tokenid,\n                      icon,\n                      abi,\n                      address,\n                      metadata\n                    });\n                    app.setState({\n                      tokens721\n                    });\n                  }\n                });\n              }\n            }\n          });\n        });\n      });\n    }\n  }\n\n  render() {\n    if (this.isWeb3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          appName: this.appName,\n          network: this.state.network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          onInputChangeUpdateField: this.onInputChangeUpdateField,\n          transferDetail20: this.state.transferDetail20,\n          transferDetail721: this.state.transferDetail721,\n          mintDetail20: this.state.mintDetail20,\n          mintDetail721: this.state.mintDetail721,\n          approveDetail20: this.state.approveDetail20,\n          approveDetail721: this.state.approveDetail721,\n          closeTransfer: this.closeTransfer,\n          newTransfer20: this.newTransfer20,\n          newTransfer721: this.newTransfer721,\n          newApprove20: this.newApprove20,\n          newApprove721: this.newApprove721,\n          newMint20: this.newMint20,\n          newMint721: this.newMint721,\n          Transfer: this.Transfer,\n          Mint: this.Mint,\n          Approve: this.Approve,\n          account: this.state.account,\n          defaultGasPrice: this.state.defaultGasPrice,\n          defaultGasLimit: this.state.defaultGasLimit,\n          tx20: this.state.tx20,\n          tx721: this.state.tx721,\n          inProgress: this.state.inProgress,\n          fields: this.state.fields,\n          tokens20: this.state.tokens20,\n          tokens721: this.state.tokens721\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(InstallMetamask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/devopsthinh/Desktop/blockchain/truffle/src/App.js"],"names":["React","Component","Web3","Tokens20","Tokens721","Nav","Description","Container","InstallMetamask","App","constructor","setNetwork","networkName","that","web3","eth","net","getId","err","networkId","setState","network","newTransfer20","index","transferDetail20","state","tokens20","newTransfer721","transferDetail721","tokens721","newMint20","mintDetail20","newMint721","mintDetail721","newApprove20","approveDetail20","newApprove721","approveDetail721","closeTransfer","fields","setGasPrice","getGasPrice","price","Gasprice","utils","fromWei","defaultGasPrice","resetApp","receiver","amount","gasPrice","gasLimit","metadata","tokenId","window","location","reload","Transfer","inProgress","contract","Contract","abi","address","app","tokenid","Math","pow","decimal","toString","account","methods","transferNFT","send","from","defaultAccount","then","response","console","log","tx20","tx721","transfer","Mint","createNFT","mint","Approve","approve","onInputChangeUpdateField","name","value","appName","isWeb3","bind","defaultGasLimit","componentDidMount","ethereum","enable","accounts","forEach","token","erc20Token","balanceOf","call","precision","balance","symbol","icon","push","token721","erc721Token","MDTrack","tokenURI","render"],"mappings":"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","sourcesContent":["/**\n * App.js have these fuctions:\n *\n * Use the injected web3 objected to connect to the Ganache blockchain and set the network in the navigation bar.\n * Asynchronously access MetaMask for account authorization.\n * Define the Transfer, Approve, and Mint methods for interacting with the token contracts.\n * Set the state and pass the relevant props to the container component before each operation (Approve, Mint, and Transfer) is carried out.\n *\n * Author: Truong Thinh\n * Create At: 7/ 8/ 2021\n */\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Tokens20 from \"./Tokens/all20\";\nimport Tokens721 from \"./Tokens/all721\";\nimport Nav from \"./Components/Nav\";\nimport Description from \"./Components/Description\";\nimport Container from \"./Components/Container\";\nimport InstallMetamask from \"./Components/InstallMetamask\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.tokens20 = Tokens20;\n    this.tokens721 = Tokens721;\n    this.appName = \"OniCoinWallet\";\n    this.isWeb3 = true;\n    this.newTransfer20 = this.newTransfer20.bind(this);\n    this.newTransfer721 = this.newTransfer721.bind(this);\n    this.newMint20 = this.newMint20.bind(this);\n    this.newMint721 = this.newMint721.bind(this);\n    this.newApprove20 = this.newApprove20.bind(this);\n    this.newApprove721 = this.newApprove721.bind(this);\n    this.closeTransfer = this.closeTransfer.bind(this);\n    this.onInputChangeUpdateField = this.onInputChangeUpdateField.bind(this);\n\n    this.state = {\n      inProgress: false,\n      tx20: null,\n      tx721: null,\n      network: \"Checking...\",\n      account: null,\n      tokens20: [],\n      tokens721: [],\n      transferDetail20: {},\n      transferDetail721: {},\n      mintDetail20: {},\n      mintDetail721: {},\n      approveDetail20: {},\n      approveDetail721: {},\n      fields: {\n        receiver: null,\n        amount: null,\n        metadata: null,\n        tokenId: null,\n        gasPrice: null,\n        gasLimit: null,\n      },\n      defaultGasPrice: null,\n      defaultGasLimit: 200000,\n    };\n  }\n\n  setNetwork = () => {\n    let networkName,\n      that = this;\n\n    this.web3.eth.net.getId(function (err, networkId) {\n      switch (networkId) {\n        case \"1\":\n          networkName = \"Main\";\n          break;\n        case \"2\":\n          networkName = \"Morden\";\n          break;\n        case \"3\":\n          networkName = \"Ropsten\";\n          break;\n        case \"4\":\n          networkName = \"Rinkeby\";\n          break;\n        case \"42\":\n          networkName = \"Kovan\";\n          break;\n        default:\n          networkName = networkId;\n      }\n\n      that.setState({\n        network: networkName,\n      });\n    });\n  };\n\n  newTransfer20 = (index) => {\n    this.setState({\n      transferDetail20: this.state.tokens20[index],\n    });\n  };\n\n  newTransfer721 = (index) => {\n    this.setState({\n      transferDetail721: this.state.tokens721[index],\n    });\n  };\n\n  newMint20 = (index) => {\n    this.setState({\n      mintDetail20: this.state.tokens20[index],\n    });\n  };\n\n  newMint721 = (index) => {\n    this.setState({\n      mintDetail721: this.state.tokens721[index],\n    });\n  };\n\n  newApprove20 = (index) => {\n    this.setState({\n      approveDetail20: this.state.tokens20[index],\n    });\n  };\n\n  newApprove721 = (index) => {\n    this.setState({\n      approveDetail721: this.state.tokens721[index],\n    });\n  };\n\n  closeTransfer = () => {\n    this.setState({\n      transferDetail20: {},\n      transferDetail721: {},\n      mintDetail20: {},\n      mintDetail721: {},\n      approveDetail20: {},\n      approveDetail721: {},\n      fields: {},\n    });\n  };\n\n  setGasPrice = () => {\n    this.web3.eth.getGasPrice((err, price) => {\n      var Gasprice = this.web3.utils.fromWei(price, \"gwei\");\n      if (!err) this.setState({ defaultGasPrice: Gasprice });\n    });\n  };\n\n  resetApp = () => {\n    this.setState({\n      transferDetail20: {},\n      transferDetail721: {},\n      fields: {\n        receiver: null,\n        amount: null,\n        gasPrice: null,\n        gasLimit: null,\n        metadata: null,\n        tokenId: null,\n      },\n      defaultGasPrice: null,\n    });\n    window.location.reload();\n  };\n\n  Transfer = () => {\n    this.setState({\n      inProgress: true,\n    });\n\n    //this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\n    var contract;\n    if (this.state.fields.metadata) {\n      contract = new this.web3.eth.Contract(\n        this.state.transferDetail721.abi,\n        this.state.transferDetail721.address\n      );\n    } else {\n      contract = new this.web3.eth.Contract(\n        this.state.transferDetail20.abi,\n        this.state.transferDetail20.address\n      );\n    }\n\n    let app = this;\n    var metadata;\n    var tokenId;\n    var amount;\n\n    if (this.state.fields.metadata) {\n      metadata = this.state.fields.metadata;\n      tokenId = this.state.fields.tokenid;\n    } else {\n      amount =\n        this.state.fields.amount *\n        Math.pow(10, this.state.transferDetail20.decimal);\n    }\n\n    let receiver = this.state.fields.receiver.toString();\n    let account = this.state.account;\n\n    if (metadata) {\n      contract.methods\n        .transferNFT(account, receiver, tokenId, metadata)\n        .send({ from: this.web3.eth.defaultAccount })\n        .then(function (response, err) {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false,\n            });\n          } else {\n            console.log(err);\n          }\n        });\n    } else {\n      contract.methods\n        .transfer(receiver, amount)\n        .send({ from: this.web3.eth.defaultAccount })\n        .then(function (response, err) {\n          if (response) {\n            console.log(response);\n\n            app.resetApp();\n\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false,\n            });\n          } else {\n            console.log(err);\n          }\n        });\n    }\n  };\n\n  Mint = () => {\n    this.setState({\n      inProgress: true,\n    });\n\n    //this.web3.eth.defaultAccount = window.web3.defaultAccount;\n\n    var contract;\n    if (this.state.fields.metadata) {\n      contract = new this.web3.eth.Contract(\n        this.state.mintDetail721.abi,\n        this.state.mintDetail721.address\n      );\n    } else {\n      contract = new this.web3.eth.Contract(\n        this.state.mintDetail20.abi,\n        this.state.mintDetail20.address\n      );\n    }\n\n    let app = this;\n    var metadata;\n    var amount;\n\n    if (this.state.fields.metadata) {\n      metadata = this.state.fields.metadata;\n    } else {\n      amount =\n        this.state.fields.amount *\n        Math.pow(10, this.state.mintDetail20.decimal);\n    }\n\n    let receiver = this.state.fields.receiver.toString();\n\n    if (metadata) {\n      contract.methods\n        .createNFT(receiver, metadata)\n        .send({ from: this.web3.eth.defaultAccount })\n        .then(function (response) {\n          if (response) {\n            console.log(response);\n            app.resetApp();\n\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false,\n            });\n          }\n        });\n    } else {\n      contract.methods\n        .mint(receiver, amount)\n        .send({ from: this.web3.eth.defaultAccount })\n        .then(function (response) {\n          if (response) {\n            console.log(response);\n\n            app.resetApp();\n\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false,\n            });\n          }\n        });\n    }\n  };\n\n  Approve = () => {\n    this.setState({\n      inProgress: true,\n    });\n\n    var contract;\n    if (this.state.approveDetail721.abi) {\n      contract = new this.web3.eth.Contract(\n        this.state.approveDetail721.abi,\n        this.state.approveDetail721.address\n      );\n    } else {\n      contract = new this.web3.eth.Contract(\n        this.state.approveDetail20.abi,\n        this.state.approveDetail20.address\n      );\n    }\n\n    let app = this;\n    let receiver = this.state.fields.receiver.toString();\n\n    if (this.state.approveDetail20.abi) {\n      let amount =\n        this.state.fields.amount *\n        Math.pow(10, this.state.approveDetail20.decimal);\n\n      contract.methods\n        .approve(receiver, amount)\n        .send({ from: this.web3.eth.defaultAccount })\n        .then(function (response) {\n          if (response) {\n            app.resetApp();\n\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false,\n            });\n          }\n        });\n    } else {\n      let tokenid = this.state.fields.tokenid;\n      contract.methods\n        .approve(receiver, tokenid)\n        .send({ from: this.web3.eth.defaultAccount })\n        .then(function (response) {\n          if (response) {\n            console.log(response);\n\n            app.resetApp();\n\n            app.setState({\n              tx20: response.tx20,\n              tx721: response.tx721,\n              inProgress: false,\n            });\n          }\n        });\n    }\n  };\n\n  onInputChangeUpdateField = (name, value) => {\n    let fields = this.state.fields;\n\n    fields[name] = value;\n\n    this.setState({\n      fields,\n    });\n  };\n\n  // To indicate the tasks to carry out after App is rendered\n  componentDidMount() {\n    var account;\n\n    if (window.ethereum) {\n      const ethereum = window.ethereum;\n      window.web3 = new Web3(ethereum);\n      this.web3 = new Web3(ethereum);\n\n      // Set the local account parameter to the first account in the array of accounts returned.\n      ethereum.enable().then((accounts) => {\n        account = accounts[0];\n        // Set the default account for window.web3\n        this.web3.eth.defaultAccount = account;\n\n        // Init the this object for our app\n        let app = this;\n\n        // Set the account state variable to the default account.\n        this.setState({\n          account,\n        });\n        \n        /**\n         * Called the setNetwork (to set the Navbar to our local Ganache blockchain) and\n         * setGasPrice methods (to get the default gas price from the network) once we have access to the injected web3.\n        */\n        this.setNetwork();\n        this.setGasPrice();\n\n        Tokens20.forEach((token) => {\n          let erc20Token = new this.web3.eth.Contract(token.abi, token.address);\n\n          erc20Token.methods\n            .balanceOf(account)\n            .call()\n            .then(function (response) {\n              if (response) {\n                let decimal = token.decimal;\n                let precision = \"1e\" + decimal;\n                let balance = response / precision;\n                let name = token.name;\n                let symbol = token.symbol;\n                let icon = token.icon;\n                let abi = token.abi;\n                let address = token.address;\n\n                balance = balance >= 0 ? balance : 0;\n\n                let tokens20 = app.state.tokens20;\n\n                if (balance > 0)\n                  tokens20.push({\n                    decimal,\n                    balance,\n                    name,\n                    symbol,\n                    icon,\n                    abi,\n                    address,\n                  });\n\n                app.setState({\n                  tokens20,\n                });\n              }\n            });\n        });\n\n        Tokens721.forEach((token721) => {\n          let erc721Token = new this.web3.eth.Contract(\n            token721.abi,\n            token721.address\n          );\n\n          erc721Token.methods\n            .MDTrack(account)\n            .call()\n            .then(function (response) {\n              if (response) {\n                let name = token721.name;\n                let symbol = token721.symbol;\n                let icon = token721.icon;\n                let abi = token721.abi;\n                let address = token721.address;\n                let tokenid = response;\n\n                tokenid = tokenid >= 0 ? tokenid : 0;\n                if (tokenid !== 0) {\n                  erc721Token.methods\n                    .tokenURI(tokenid)\n                    .call()\n                    .then(function (response) {\n                      if (response) {\n                        let metadata = response;\n                        let tokens721 = app.state.tokens721;\n\n                        tokens721.push({\n                          name,\n                          symbol,\n                          tokenid,\n                          icon,\n                          abi,\n                          address,\n                          metadata,\n                        });\n\n                        app.setState({\n                          tokens721,\n                        });\n                      }\n                    });\n                }\n              }\n            });\n        });\n      });\n    }\n  }\n\n  render() {\n    if (this.isWeb3) {\n      return (\n        <div>\n          <Nav appName={this.appName} network={this.state.network} />\n          <Description />\n          <Container\n            onInputChangeUpdateField={this.onInputChangeUpdateField}\n            transferDetail20={this.state.transferDetail20}\n            transferDetail721={this.state.transferDetail721}\n            mintDetail20={this.state.mintDetail20}\n            mintDetail721={this.state.mintDetail721}\n            approveDetail20={this.state.approveDetail20}\n            approveDetail721={this.state.approveDetail721}\n            closeTransfer={this.closeTransfer}\n            newTransfer20={this.newTransfer20}\n            newTransfer721={this.newTransfer721}\n            newApprove20={this.newApprove20}\n            newApprove721={this.newApprove721}\n            newMint20={this.newMint20}\n            newMint721={this.newMint721}\n            Transfer={this.Transfer}\n            Mint={this.Mint}\n            Approve={this.Approve}\n            account={this.state.account}\n            defaultGasPrice={this.state.defaultGasPrice}\n            defaultGasLimit={this.state.defaultGasLimit}\n            tx20={this.state.tx20}\n            tx721={this.state.tx721}\n            inProgress={this.state.inProgress}\n            fields={this.state.fields}\n            tokens20={this.state.tokens20}\n            tokens721={this.state.tokens721}\n          />\n        </div>\n      );\n    } else {\n      return <InstallMetamask />;\n    }\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}