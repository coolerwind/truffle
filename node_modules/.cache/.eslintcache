[{"/home/devopsthinh/Desktop/blockchain/truffle/src/index.js":"1","/home/devopsthinh/Desktop/blockchain/truffle/src/App.js":"2","/home/devopsthinh/Desktop/blockchain/truffle/src/reportWebVitals.js":"3","/home/devopsthinh/Desktop/blockchain/truffle/src/Tokens/all20.js":"4","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/Nav.js":"5","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/Description.js":"6","/home/devopsthinh/Desktop/blockchain/truffle/src/Tokens/all721.js":"7","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/InstallMetamask.js":"8","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/Container.js":"9","/home/devopsthinh/Desktop/blockchain/truffle/src/Tokens/OniCoin.js":"10","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/AddressBar.js":"11","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/TokenBlock20.js":"12","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/TokenBlock721.js":"13","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/SortTokenBlock.js":"14","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/TransferHeader.js":"15","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/TransferToken.js":"16","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/MintHeader.js":"17","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/MintToken.js":"18","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/ApproveHeader.js":"19","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/ApproveToken.js":"20","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/SuccessTransaction.js":"21","/home/devopsthinh/Desktop/blockchain/truffle/src/Tokens/Condos.js":"22","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/InputField.js":"23"},{"size":573,"mtime":1628262201411,"results":"24","hashOfConfig":"25"},{"size":14604,"mtime":1628260850538,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1628220070243,"results":"27","hashOfConfig":"25"},{"size":184,"mtime":1628270835286,"results":"28","hashOfConfig":"25"},{"size":1310,"mtime":1628258035503,"results":"29","hashOfConfig":"25"},{"size":527,"mtime":1628258011517,"results":"30","hashOfConfig":"25"},{"size":185,"mtime":1628270847258,"results":"31","hashOfConfig":"25"},{"size":777,"mtime":1628258022656,"results":"32","hashOfConfig":"25"},{"size":7598,"mtime":1628258002982,"results":"33","hashOfConfig":"25"},{"size":5067,"mtime":1628270881813,"results":"34","hashOfConfig":"25"},{"size":441,"mtime":1628274444827,"results":"35","hashOfConfig":"25"},{"size":2231,"mtime":1628258043750,"results":"36","hashOfConfig":"25"},{"size":2406,"mtime":1628258049342,"results":"37","hashOfConfig":"25"},{"size":413,"mtime":1628258152596,"results":"38","hashOfConfig":"25"},{"size":670,"mtime":1628258053518,"results":"39","hashOfConfig":"25"},{"size":4548,"mtime":1628258058645,"results":"40","hashOfConfig":"25"},{"size":654,"mtime":1628258026472,"results":"41","hashOfConfig":"25"},{"size":4304,"mtime":1628258030460,"results":"42","hashOfConfig":"25"},{"size":672,"mtime":1628257989860,"results":"43","hashOfConfig":"25"},{"size":4285,"mtime":1628257996495,"results":"44","hashOfConfig":"25"},{"size":492,"mtime":1628258234607,"results":"45","hashOfConfig":"25"},{"size":9422,"mtime":1628270898649,"results":"46","hashOfConfig":"25"},{"size":898,"mtime":1628258017033,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"8kpw2d",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},"/home/devopsthinh/Desktop/blockchain/truffle/src/index.js",[],["103","104"],"/home/devopsthinh/Desktop/blockchain/truffle/src/App.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/reportWebVitals.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Tokens/all20.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/Nav.js",["105","106"],"/**\n * App components\n * Nav.js:\n * Renders the main navigation of App\n * \n * Author: Truong Thinh\n * Create At: 5/ 8/ 2021\n */\nimport React, { Component } from \"react\";\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav className=\"navbar is-link\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <strong>\n              <i className=\"fa fa-coins\"></i> {this.props.appName}\n            </strong>\n          </a>\n\n          <a\n            role=\"button\"\n            className=\"navbar-burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <a className=\"navbar-item\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag\">\n                  <i className=\"fa fa-signal\"></i> &nbsp; Network\n                </span>\n                <span className=\"tag is-info\">{this.props.network}</span>\n              </div>\n            </a>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/Description.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Tokens/all721.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/InstallMetamask.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/Container.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Tokens/OniCoin.js",["107"],"export default {\n  address: \"0x987915Cfd5F8757d42Ac71A1f1a396EC756e972E\",\n  decimal: 4,\n  name: \"OniCoin\",\n  symbol: \"OC\",\n  icon: \"MCCoin.png\",\n  abi: [\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"account\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transfer\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n      ],\n      name: \"allowance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"sender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"addedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"increaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"subtractedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"decreaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n  ],\n};\n","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/AddressBar.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/TokenBlock20.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/TokenBlock721.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/SortTokenBlock.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/TransferHeader.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/TransferToken.js",["108","109","110","111"],"/**\n * App components\n *\n * TransferToken.js:\n * enders the wallet screen for the Transfer screen.\n * It loads when the user clicks the send button.\n * For ERC20 tokens, it asks for the address to send to and the number of tokens to send.\n * For ERC721, it asks for the address to send to, the ID of the token to be sent, and the new metadata for the transfer.\n *\n * Author: Truong Thinh\n * Create At: 5/ 8/ 2021\n */\nimport React from \"react\";\nimport InputField from \"./InputField\";\n\nfunction TransferToken(props) {\n  return (\n    <div className=\"panel-block is-paddingless is-12\">\n      <div className=\"column is-12\" id=\"token-lists\">\n        <InputField\n          onInputChangeUpdateField={props.onInputChangeUpdateField}\n          fields={props.fields}\n          name=\"receiver\"\n          placeholder=\"Receiver Address\"\n        />\n\n        {props.transferDetail20 ? (\n          <div>\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              fields={props.fields}\n              name=\"amount\"\n              placeholder=\"Amount To Transfer\"\n              addon={props.transferDetail20.symbol.toUpperCase()}\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasPrice}\n              fields={props.fields}\n              name=\"gasPrice\"\n              placeholder=\"Gas Price In Gwei\"\n              addon=\"Gas Price(gwei)\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasLimit}\n              fields={props.fields}\n              name=\"gasLimit\"\n              placeholder=\"Gas Limit\"\n              addon=\"Gas Limit\"\n            />\n\n            <div className=\"field is-grouped is-pulled-right is-offset\">\n              <p className=\"control\">\n                <a\n                  className=\"button is-light\"\n                  disabled={props.inProgress}\n                  onClick={() => props.closeTransfer()}\n                >\n                  Back\n                </a>\n              </p>\n              <p className=\"control\">\n                <a\n                  className={\n                    props.inProgress\n                      ? \"button is-danger is-loading\"\n                      : \"button is-danger\"\n                  }\n                  disabled={props.inProgress}\n                  onClick={() => props.Transfer()}\n                >\n                  Transfer\n                </a>\n              </p>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              fields={props.fields}\n              name=\"metadata\"\n              placeholder=\"Metadata\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              fields={props.fields}\n              name=\"tokenid\"\n              placeholder=\"Token ID\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasPrice}\n              fields={props.fields}\n              name=\"gasPrice\"\n              placeholder=\"Gas Price In Gwei\"\n              addon=\"Gas Price(gwei)\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasLimit}\n              fields={props.fields}\n              name=\"gasLimit\"\n              placeholder=\"Gas Limit\"\n              addon=\"Gas Limit\"\n            />\n\n            <div className=\"field is-grouped is-pulled-right is-offset\">\n              <p className=\"control\">\n                <a\n                  className=\"button is-light\"\n                  disabled={props.inProgress}\n                  onClick={() => props.closeTransfer()}\n                >\n                  Back\n                </a>\n              </p>\n              <p className=\"control\">\n                <a\n                  className={\n                    props.inProgress\n                      ? \"button is-danger is-loading\"\n                      : \"button is-danger\"\n                  }\n                  disabled={props.inProgress}\n                  onClick={() => props.Transfer()}\n                >\n                  Transfer\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TransferToken;\n","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/MintHeader.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/MintToken.js",["112","113","114","115"],"/**\n * App components\n *\n * MintToken.js:\n * Renders the wallet screen for the Mint screen.\n * It loads when the user clicks the mint button.\n * For ERC20 tokens, it asks for the address it needs to send the new tokens to and the number of tokens to mint.\n * For ERC721, it asks for the address to which the new NFT will be tagged and the metadata for the new token.\n *\n * Author: Truong Thinh\n * Create At: 5/ 8/ 2021\n */\nimport React from \"react\";\nimport InputField from \"./InputField\";\n\nfunction MintToken(props) {\n  return (\n    <div className=\"panel-block is-paddingless is-12\">\n      <div className=\"column is-12\" id=\"token-lists\">\n        <InputField\n          onInputChangeUpdateField={props.onInputChangeUpdateField}\n          fields={props.fields}\n          name=\"receiver\"\n          placeholder=\"Receiver Address\"\n        />\n\n        {props.mintDetail20 ? (\n          <div>\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              fields={props.fields}\n              name=\"amount\"\n              placeholder=\"Amount To Mint\"\n              addon={props.mintDetail20.symbol.toUpperCase()}\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasPrice}\n              fields={props.fields}\n              name=\"gasPrice\"\n              placeholder=\"Gas Price In Gwei\"\n              addon=\"Gas Price(gwei)\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasLimit}\n              fields={props.fields}\n              name=\"gasLimit\"\n              placeholder=\"Gas Limit\"\n              addon=\"Gas Limit\"\n            />\n\n            <div className=\"field is-grouped is-pulled-right is-offset\">\n              <p className=\"control\">\n                <a\n                  className=\"button is-light\"\n                  disabled={props.inProgress}\n                  onClick={() => props.closeTransfer()}\n                >\n                  Back\n                </a>\n              </p>\n              <p className=\"control\">\n                <a\n                  className={\n                    props.inProgress\n                      ? \"button is-danger is-loading\"\n                      : \"button is-danger\"\n                  }\n                  disabled={props.inProgress}\n                  onClick={() => props.Mint()}\n                >\n                  Mint\n                </a>\n              </p>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              fields={props.fields}\n              name=\"metadata\"\n              placeholder=\"Metadata\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasPrice}\n              fields={props.fields}\n              name=\"gasPrice\"\n              placeholder=\"Gas Price In Gwei\"\n              addon=\"Gas Price(gwei)\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasLimit}\n              fields={props.fields}\n              name=\"gasLimit\"\n              placeholder=\"Gas Limit\"\n              addon=\"Gas Limit\"\n            />\n\n            <div className=\"field is-grouped is-pulled-right is-offset\">\n              <p className=\"control\">\n                <a\n                  className=\"button is-light\"\n                  disabled={props.inProgress}\n                  onClick={() => props.closeTransfer()}\n                >\n                  Back\n                </a>\n              </p>\n              <p className=\"control\">\n                <a\n                  className={\n                    props.inProgress\n                      ? \"button is-danger is-loading\"\n                      : \"button is-danger\"\n                  }\n                  disabled={props.inProgress}\n                  onClick={() => props.Mint()}\n                >\n                  Mint\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MintToken;\n","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/ApproveHeader.js",[],"/home/devopsthinh/Desktop/blockchain/truffle/src/Components/ApproveToken.js",["116","117","118","119"],"/**\n * App components\n *\n * ApproveToken.js:\n * Renders the wallet screen for the Approve screen.\n * It loads when the user clicks the approve button.\n * For ERC20 tokens, it asks for the address to approve and the balance to approve for that address.\n * For ERC721, it asks for the address to approve and the token ID to approve.\n *\n * Author: Truong Thinh\n * Create At: 5/ 8/ 2021\n */\nimport React from \"react\";\nimport InputField from \"./InputField\";\n\nfunction ApproveToken(props) {\n  return (\n    <div className=\"panel-block is-paddingless is-12\">\n      <div className=\"column is-12\" id=\"token-lists\">\n        <InputField\n          onInputChangeUpdateField={props.onInputChangeUpdateField}\n          fields={props.fields}\n          name=\"receiver\"\n          placeholder=\"Address\"\n        />\n\n        {props.approveDetail20 ? (\n          <div>\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              fields={props.fields}\n              name=\"amount\"\n              placeholder=\"Amount To Approve\"\n              addon={props.approveDetail20.symbol.toUpperCase()}\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasPrice}\n              fields={props.fields}\n              name=\"gasPrice\"\n              placeholder=\"Gas Price In Gwei\"\n              addon=\"Gas Price(gwei)\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasLimit}\n              fields={props.fields}\n              name=\"gasLimit\"\n              placeholder=\"Gas Limit\"\n              addon=\"Gas Limit\"\n            />\n\n            <div className=\"field is-grouped is-pulled-right is-offset\">\n              <p className=\"control\">\n                <a\n                  className=\"button is-light\"\n                  disabled={props.inProgress}\n                  onClick={() => props.closeTransfer()}\n                >\n                  Back\n                </a>\n              </p>\n              <p className=\"control\">\n                <a\n                  className={\n                    props.inProgress\n                      ? \"button is-danger is-loading\"\n                      : \"button is-danger\"\n                  }\n                  disabled={props.inProgress}\n                  onClick={() => props.Approve()}\n                >\n                  Approve\n                </a>\n              </p>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              fields={props.fields}\n              name=\"tokenid\"\n              placeholder=\"Token ID\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasPrice}\n              fields={props.fields}\n              name=\"gasPrice\"\n              placeholder=\"Gas Price In Gwei\"\n              addon=\"Gas Price(gwei)\"\n            />\n\n            <InputField\n              onInputChangeUpdateField={props.onInputChangeUpdateField}\n              default={props.defaultGasLimit}\n              fields={props.fields}\n              name=\"gasLimit\"\n              placeholder=\"Gas Limit\"\n              addon=\"Gas Limit\"\n            />\n\n            <div className=\"field is-grouped is-pulled-right is-offset\">\n              <p className=\"control\">\n                <a\n                  className=\"button is-light\"\n                  disabled={props.inProgress}\n                  onClick={() => props.closeTransfer()}\n                >\n                  Back\n                </a>\n              </p>\n              <p className=\"control\">\n                <a\n                  className={\n                    props.inProgress\n                      ? \"button is-danger is-loading\"\n                      : \"button is-danger\"\n                  }\n                  disabled={props.inProgress}\n                  onClick={() => props.Approve()}\n                >\n                  Approve\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ApproveToken;\n","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/SuccessTransaction.js",["120"],"/**\n * App components\n * \n * SuccessTransaction.js:\n * \n * Author: Truong Thinh\n * Create At: 6/ 8/ 2021\n */\nimport React from \"react\";\n\nfunction SuccessTransaction(props) {\n  return (\n    <div className=\"column is-12 is-ellipsis has-text-centered\">\n      <div className=\"notification is-info\">\n        <button className=\"delete\"></button>\n        <a title={props.tx} className=\"is-size-7\">\n          {props.tx}\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default SuccessTransaction;\n","/home/devopsthinh/Desktop/blockchain/truffle/src/Tokens/Condos.js",["121"],"export default {\n  address: \"0x923d0E1792633525c9228B613D00A8C19296CB6D\",\n  decimal: 0,\n  name: \"Condos\",\n  symbol: \"CONDO\",\n  icon: \"Condos.jpg\",\n  abi: [\n    {\n      inputs: [],\n      payable: true,\n      stateMutability: \"payable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"approved\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"ApprovalForAll\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"Id\",\n      outputs: [\n        {\n          internalType: \"uint32\",\n          name: \"\",\n          type: \"uint32\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      name: \"MDTrack\",\n      outputs: [\n        {\n          internalType: \"uint32\",\n          name: \"\",\n          type: \"uint32\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"baseURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getApproved\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n      ],\n      name: \"isApprovedForAll\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ownerOf\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"_data\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"setApprovalForAll\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"bytes4\",\n          name: \"interfaceId\",\n          type: \"bytes4\",\n        },\n      ],\n      name: \"supportsInterface\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"symbol\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"receiver\",\n          type: \"address\",\n        },\n        {\n          internalType: \"string\",\n          name: \"metadata\",\n          type: \"string\",\n        },\n      ],\n      name: \"createNFT\",\n      outputs: [\n        {\n          internalType: \"uint32\",\n          name: \"\",\n          type: \"uint32\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"sender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"receiver\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint32\",\n          name: \"transId\",\n          type: \"uint32\",\n        },\n        {\n          internalType: \"string\",\n          name: \"metadata\",\n          type: \"string\",\n        },\n      ],\n      name: \"transferNFT\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n  ],\n};\n","/home/devopsthinh/Desktop/blockchain/truffle/src/Components/InputField.js",["122"],"/**\n * App components\n * \n * InputField.js:\n * Renders the input field\n * \n * Author: Truong Thinh\n * Create At: 5/ 8/ 2021\n */\nimport React from \"react\";\n\nfunction InputField(props) {\n  let field = props.name;\n  let value = props.fields[field] ? props.fields[field] : \"\";\n  let placeholder = props.placeholder;\n  let addon = props.addon;\n\n  let handleChange = (e) => {\n    props.onInputChangeUpdateField(field, e.target.value);\n  };\n\n  return (\n    <div className=\"field has-addons is-12\">\n      <p className=\"control is-expanded\">\n        <input\n          defaultValue={props.default || value}\n          onInput={handleChange}\n          placeholder={placeholder}\n          className=\"input\"\n          type=\"text\"\n        ></input>\n      </p>\n      <p className=\"control\">\n        {addon ? <a className=\"button is-static\">{addon}</a> : \"\"}\n      </p>\n    </div>\n  );\n}\n\nexport default InputField;\n",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":22,"column":11,"nodeType":"129","endLine":27,"endColumn":12},{"ruleId":"127","severity":1,"message":"128","line":35,"column":13,"nodeType":"129","endLine":35,"endColumn":40},{"ruleId":"130","severity":1,"message":"131","line":1,"column":1,"nodeType":"132","endLine":256,"endColumn":3},{"ruleId":"127","severity":1,"message":"128","line":57,"column":17,"nodeType":"129","endLine":61,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":66,"column":17,"nodeType":"129","endLine":74,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":116,"column":17,"nodeType":"129","endLine":120,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":125,"column":17,"nodeType":"129","endLine":133,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":57,"column":17,"nodeType":"129","endLine":61,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":66,"column":17,"nodeType":"129","endLine":74,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":109,"column":17,"nodeType":"129","endLine":113,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":118,"column":17,"nodeType":"129","endLine":126,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":57,"column":17,"nodeType":"129","endLine":61,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":66,"column":17,"nodeType":"129","endLine":74,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":109,"column":17,"nodeType":"129","endLine":113,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":118,"column":17,"nodeType":"129","endLine":126,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":16,"column":9,"nodeType":"129","endLine":16,"endColumn":51},{"ruleId":"130","severity":1,"message":"131","line":1,"column":1,"nodeType":"132","endLine":478,"endColumn":3},{"ruleId":"127","severity":1,"message":"128","line":34,"column":18,"nodeType":"129","endLine":34,"endColumn":50},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]